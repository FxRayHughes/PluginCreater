plugins {
    id 'java'
    id 'maven'
    id 'io.izzel.taboolib' version '1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.4.0'
}

group = 'io.izzel.taboolib.example'
version = '1.0.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

taboolib {
    tabooLibVersion = '5.7.1'
    loaderVersion = '3.0.4'
    classifier = null
    builtin = true
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'ink.ptms.core:v11604:11604:all'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib'
    implementation fileTree(dir: 'libs', includes: ['*.jar'])
}

processResources {
    // 是否在编译时打包源代码
    from(sourceSets.main.allSource) {
        exclude 'plugin.yml'
    }
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand(
                name: rootProject.name,
                main: project.group + ".boot.PluginBoot",
                version: project.version,
                libVersion: taboolib.tabooLibVersion,
                loaderVersion: taboolib.loaderVersion
        )
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: project.findProperty('repository')) {
                authentication(userName: project.findProperty('user'), password: project.findProperty('password'))
            }
            pom.artifactId = rootProject.name
            pom.groupId = project.group
            pom.version = project.version
            pom.packaging = 'jar'
        }
    }
}

jar {
//    classifier('all')
}

artifacts {
//    archives shadowJar
}